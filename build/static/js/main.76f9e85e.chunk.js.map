{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","calculateWinner","lines","length","a","b","c","Game","state","history","Array","fill","stepNumber","xIsNext","slice","setState","concat","step","status","current","winner","moves","map","move","desc","key","jumpTo","handleClick","ReactDOM","render","document","getElementById"],"mappings":"2PAKI,SAASA,EAAOC,GACd,OACE,4BACAC,UAAU,SACVC,QAAS,WAAOF,EAAME,YAEnBF,EAAMG,O,IAKTC,E,2KAESC,GAAI,IAAD,OACd,OACA,kBAACN,EAAD,CACEI,MAAOG,KAAKN,MAAMO,QAAQF,GAC1BH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,+BAMpC,OACE,6BACE,yBAAKJ,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErB,yBAAKP,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErB,yBAAKP,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,S,GA3BTC,IAAMC,WAkC1B,SAASC,EAAgBJ,GAWvB,IAVA,IAAMK,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAP,EAAI,EAAGA,EAAIO,EAAMC,OAAQR,IAAK,CAAC,IAAD,cACnBO,EAAMP,GADa,GAC9BS,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIT,EAAQO,IAAMP,EAAQO,KAAOP,EAAQQ,IAAMR,EAAQO,KAAOP,EAAQS,GACpE,OAAOT,EAAQO,GAGnB,OAAO,K,IAGHG,E,kDACJ,WAAYjB,GAAQ,IAAD,8BACjB,cAAMA,IACDkB,MAAQ,CACXC,QAAS,CAAC,CACRZ,QAASa,MAAM,GAAGC,KAAK,QAEzBC,WAAY,EACZC,SAAS,GAPM,E,wDAWPlB,GACV,IAAMc,EAAUb,KAAKY,MAAMC,QAAQK,MAAM,EAAGlB,KAAKY,MAAMI,WAAW,GAE5Df,EADUY,EAAQA,EAAQN,OAAS,GACjBN,QAAQiB,QAG7Bb,EAAgBJ,IAAYA,EAAQF,KAIvCE,EAAQF,GAAMC,KAAKY,MAAMK,QAAU,IAAM,IACzCjB,KAAKmB,SAAS,CACZN,QAASA,EAAQO,OAAO,CAAC,CACvBnB,QAASA,KAEXe,WAAYH,EAAQN,OACpBU,SAAUjB,KAAKY,MAAMK,a,6BAIlBI,GACLrB,KAAKmB,SAAS,CACZH,WAAYK,EACZJ,QAAUI,EAAK,IAAO,M,+BAKhB,IAkBJC,EAlBG,OACDT,EAAUb,KAAKY,MAAMC,QACrBU,EAAUV,EAAQb,KAAKY,MAAMI,YAC7BQ,EAASnB,EAAgBkB,EAAQtB,SAEjCwB,EAAQZ,EAAQa,KAAI,SAACL,EAAMM,GAC/B,IAAMC,EAAOD,EACX,eAAiBA,EACjB,mBAEF,OACE,wBAAIE,IAAKF,GACP,4BAAQ/B,QAAS,WAAO,EAAKkC,OAAOH,KAASC,OAcnD,OANEN,EADCE,EACQ,WAAaA,EAEb,iBAAmBxB,KAAKY,MAAMK,QAAU,IAAM,KAKvD,yBAAKtB,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACG,EAAD,CACIG,QAASsB,EAAQtB,QACjBL,QAAS,SAACG,GAAD,OAAK,EAAKgC,YAAYhC,OAGrC,yBAAKJ,UAAU,aACb,6BAAM2B,GACN,4BAAKG,S,GA5EItB,IAAMC,WAqFzB4B,IAASC,OACP,kBAACtB,EAAD,MACAuB,SAASC,eAAe,W","file":"static/js/main.76f9e85e.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\n    function Square(props){\n      return (\n        <button \n        className=\"square\" \n        onClick={() => {props.onClick()}}\n        >\n          {props.value}\n        </button>\n      );\n    }\n\n  class Board extends React.Component {\n\n    renderSquare(i) {\n      return (\n      <Square \n        value={this.props.squares[i]} \n        onClick={() => this.props.onClick(i)}\n      />\n      );\n    }\n\n    render() {\n      return (\n        <div>\n          <div className=\"board-row\">\n            {this.renderSquare(0)}\n            {this.renderSquare(1)}\n            {this.renderSquare(2)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(3)}\n            {this.renderSquare(4)}\n            {this.renderSquare(5)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(6)}\n            {this.renderSquare(7)}\n            {this.renderSquare(8)}\n          </div>\n        </div>\n      );\n    }\n  }\n\n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  }\n  \n  class Game extends React.Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        history: [{\n          squares: Array(9).fill(null),\n        }],\n        stepNumber: 0,\n        xIsNext: true,\n      };\n    }\n\n    handleClick(i) {\n      const history = this.state.history.slice(0, this.state.stepNumber+1)\n      const current = history[history.length - 1];\n      const squares = current.squares.slice();\n\n      /* Game is won or spot taken already */\n      if(calculateWinner(squares) || squares[i]) {\n        return;\n      }\n\n      squares[i] = (this.state.xIsNext ? \"X\" : \"O\");\n      this.setState({\n        history: history.concat([{\n          squares: squares\n        }]),\n        stepNumber: history.length,\n        xIsNext: !this.state.xIsNext\n      })\n    }\n\n    jumpTo(step) {\n      this.setState({\n        stepNumber: step,\n        xIsNext: (step%2) === 0\n      })\n    }\n  \n\n    render() {\n      const history = this.state.history;\n      const current = history[this.state.stepNumber];\n      const winner = calculateWinner(current.squares);\n\n      const moves = history.map((step, move) => {\n        const desc = move ?\n          'Go to move #' + move :\n          'Go to game start';\n        \n        return(\n          <li key={move}>\n            <button onClick={() => {this.jumpTo(move)}}>{desc}</button>\n          </li>\n        )\n\n      });\n\n      let status;\n      if(winner) {\n        status = 'Winner: ' + winner;\n      } else {\n        status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n      }\n\n\n      return (\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board\n                squares={current.squares}\n                onClick={(i)=>this.handleClick(i)}\n             />\n          </div>\n          <div className=\"game-info\">\n            <div>{status}</div>\n            <ol>{moves}</ol>\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  // ========================================\n  \n  ReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  );\n  "],"sourceRoot":""}